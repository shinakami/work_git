!  HomeWorkMatix1.f90 
!
!  FUNCTIONS:
!  HomeWorkMatix1 - Entry point of console application.
!

!****************************************************************************
!
!  PROGRAM: HomeWorkMatix1
!
!  PURPOSE:  Entry point for the console application.
!
!****************************************************************************

    program HomeWorkMatix1
    implicit none
    ! Variables
    real A(4,4),A_new(4,4),B(4),A_T(4,4),A_ans(4),X_ans(4)
    real tester_A(4,4),tester_B(4)
    real def_A,x,test,temp,det,num,def_A1
    integer i,j,kk,N,L,K,LL,M,gg,LM
    gg=1
    def_A=1
    N=4
    num=0
    ! Body of HomeWorkMatix1
    !!第三章第7題克拉瑪法
    write(*,*)"第三章第7題克拉瑪法"
    !!A矩陣
    A(1,1)=1
    A(1,2)=3
    A(1,3)=1
    A(1,4)=-1
    A(2,1)=2
    A(2,2)=0
    A(2,3)=1
    A(2,4)=1
    A(3,1)=0
    A(3,2)=-1
    A(3,3)=4
    A(3,4)=1
    A(4,1)=0
    A(4,2)=1
    A(4,3)=1
    A(4,4)=-5
    !!B矩陣
    B(1)=3
    B(2)=1
    B(3)=6
    B(4)=16
    write(*,*)"A_matrix="
    do i=1,N
        write(*,15)(A(i,j),j=1,N)
15      format(2X,4F6.2)        
    enddo 
    
    do i=1,N
        do j=1,N
            tester_A(i,j)=A(i,j)
        enddo
    enddo
    do i=1,N
        tester_B(i)=B(i)
    enddo
        
    write(*,*)"B_matrix="
    do i=1,N
        write(*,95)B(i)
95      format(2X,F6.2)        
    enddo 
    do i=1,N
        do j=1,N
            A_T(i,j)=A(j,i)
        enddo
    enddo
    write(*,*)"A_Transpose_matrix="
    do i=1,N
        write(*,187)(A_T(i,j),j=1,N)
187     format(2X,4F6.2)        
    enddo 
    !!計算出A矩陣行列式值
    L=1
    K=2
    def_A=1
30  LL=L+1
40  test=abs(A(L,L))-abs(A(LL,L))
    if(test>=0)then
        goto 70
    endif
    do M=1,N
        temp=A(L,M)
        A(L,M)=A(LL,M)
        A(LL,M)=temp
    enddo
    def_A=-def_A
    if(LL<N)then
        goto 70
    endif
35  if(A(L,L)/=0)then
        goto 80
    endif
    def_A=0
    goto 110
70  LL=LL+1
    if(LL<=N)then
        goto 40
    elseif(LL>N)then
        goto 35
    endif
80  det=A(L,L)
    do j=L,N
        A(L,j)=A(L,j)/det
    enddo
    do i=K,N
        x=A(i,L)
        do j=L,N
            A(i,j)=A(i,j)-A(L,j)*x
        enddo
    enddo
    L=L+1
    K=K+1
    def_A=def_A*det
    if(L<N)then
        goto 30
    endif
    def_A=def_A*A(N,N)
110 write(*,17)def_A
17  format(/,"A矩陣行列式值=",F8.3,/)
    
    !!克拉瑪法
    LM=1
111 do i=1,N
        do j=1,N
            A(i,j)=tester_A(i,j)
        enddo
    enddo
    do i=1,N
        B(i)=tester_B(i)
    enddo
    !!將B矩陣取代部分A矩陣成為新矩陣
    do i=1,N
        A(i,LM)=B(i)
    enddo
    do i=1,N
        do j=1,N
            A_new(i,j)=A(i,j)
        enddo
    enddo
    write(*,87)LM
87  format(/,"A",I1,"矩陣:")
    do i=1,N
        write(*,162)(A_new(i,j),j=1,N)
162     format(2X,4F6.2)        
    enddo 
    
    !!計算克拉瑪矩陣行列式值
    L=1
    K=2
    def_A1=1
33  LL=L+1
43  test=abs(A_new(L,L))-abs(A_new(LL,L))
    if(test>=0)then
        goto 73
    endif
    do M=1,N
        temp=A_new(L,M)
        A_new(L,M)=A_new(LL,M)
        A_new(LL,M)=temp
    enddo
    def_A1=-def_A1
    if(LL<N)then
        goto 73
    endif
38  if(A_new(L,L)/=0)then
        goto 83
    endif
    def_A1=0
    goto 112
73  LL=LL+1
    if(LL<=N)then
        goto 43
    elseif(LL>N)then
        goto 38
    endif
83  det=A_new(L,L)
    do j=L,N
        A_new(L,j)=A_new(L,j)/det
    enddo
    do i=K,N
        x=A_new(i,L)
        do j=L,N
            A_new(i,j)=A_new(i,j)-A_new(L,j)*x
        enddo
    enddo
    L=L+1
    K=K+1
    def_A1=def_A1*det
    if(L<N)then
        goto 33
    endif
    def_A1=def_A1*A_new(N,N)
    A_ans(LM)=def_A1
    if(LM<N)then
        LM=LM+1
        goto 111
    endif
    
    do i=1,N
112     write(*,18)i,A_ans(i)
18      format(/,"A",I1,"矩陣行列式值=",F8.3,/)
    enddo
    
    do i=1,N
        X_ans(i)=A_ans(i)/def_A
        write(*,101)i,X_ans(i)
101     format(/,"X(",I1,")=",F8.3)
    enddo
    pause
    end program HomeWorkMatix1